name: Fetch Repository Releases

on:
  workflow_dispatch:
    inputs:
      repo_owner:
        description: 'The owner of the repository (e.g., "appleboy")'
        required: true
        type: string
      repo_name:
        description: 'The name of the repository (e.g., "telegram-action")'
        required: true
        type: string

jobs:
  fetch-releases:
    name: Fetch Releases
    runs-on: ubuntu-latest
    outputs:
      artifact_name: release-message
      repo_full_name: ${{ github.event.inputs.repo_owner }}/${{ github.event.inputs.repo_name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Generate Release Message
        env:
          REPO_OWNER: ${{ github.event.inputs.repo_owner }}
          REPO_NAME: ${{ github.event.inputs.repo_name }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm start

      - name: Upload Message Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-message
          path: telegram-message.txt
          retention-days: 1

  send-detailed-notification:
    name: Send Detailed Notification
    runs-on: ubuntu-latest
    needs: fetch-releases
    steps:
      - name: Download Message Artifact
        uses: actions/download-artifact@v5
        with:
          name: ${{ needs.fetch-releases.outputs.artifact_name }}

      - name: Read Detailed Message
        id: read_message
        run: |
          MESSAGE=$(cat telegram-message.txt)
          echo "message<<EOF" >> $GITHUB_OUTPUT
          echo "$MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Dispatch Detailed Message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: ${{ steps.read_message.outputs.message }}

  send-summary-notification:
    name: Send Summary Notification
    runs-on: ubuntu-latest
    needs: fetch-releases
    steps:
      - name: Download Message Artifact
        uses: actions/download-artifact@v5
        with:
          name: ${{ needs.fetch-releases.outputs.artifact_name }}

      - name: Generate Summary Message
        id: generate_summary
        run: |
          # Count lines, skipping the header (first 2 lines) to get the number of releases
          RELEASE_COUNT=$(tail -n +3 telegram-message.txt | wc -l)
          REPO_NAME="${{ needs.fetch-releases.outputs.repo_full_name }}"
          
          if [ "$RELEASE_COUNT" -gt 0 ]; then
            MESSAGE="*✅ Summary: Found ${RELEASE_COUNT} releases for ${REPO_NAME}.*"
          else
            MESSAGE="*ℹ️ Summary: No releases found for ${REPO_NAME}.*"
          fi
          
          echo "message<<EOF" >> $GITHUB_OUTPUT
          echo "$MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Dispatch Summary Message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: ${{ steps.generate_summary.outputs.message }}

