#!/bin/bash

# A robust script to install Python 3.13 on Ubuntu,
# upgrade pip, and clean up. This script uses the 'deadsnakes' PPA
# for reliable and up-to-date Python versions.
#
# USAGE:
# 1. Save this script as `install_python.sh`
# 2. Make it executable: `chmod +x install_python.sh`
# 3. Run with sudo: `sudo ./install_python.sh`

# Exit immediately if a command exits with a non-zero status.
set -e

# --- Helper Functions for Colored Output ---
echo_green() {
  echo -e "\033[0;32m$1\033[0m"
}

echo_yellow() {
  echo -e "\033[0;33m$1\033[0m"
}

echo_red() {
  echo -e "\033[0;31m$1\033[0m"
}

# --- Check for root privileges ---
if [[ $EUID -ne 0 ]]; then
   echo_red "This script must be run as root. Please use sudo."
   exit 1
fi

# --- Main Logic ---

echo_green "--- Step 1: Updating System Packages ---"
apt-get update && apt-get upgrade -y
echo_green "System packages updated successfully."
echo ""

# --- Step 2: Install Prerequisites ---
echo_green "--- Step 2: Installing prerequisite packages ---"
# software-properties-common is needed for add-apt-repository
# build-essential is good to have for any C extensions you might install via pip
apt-get install -y software-properties-common build-essential
echo_green "Prerequisites installed successfully."
echo ""

# --- Step 3: Add the deadsnakes PPA ---
echo_green "--- Step 3: Adding the deadsnakes PPA for latest Python versions ---"
# -y flag automatically confirms the addition of the PPA
add-apt-repository ppa:deadsnakes/ppa -y
apt-get update
echo_green "Deadsnakes PPA added and package list updated."
echo ""

# --- Step 4: Install Specific Python Version (3.13) ---
echo_green "--- Step 4: Installing Python 3.13 ---"
# The user requested version 3.13.7. The package manager will install the latest available patch
# for the minor version 3.13 from the PPA. The package name is python3.13.
LATEST_PYTHON_VERSION="python3.13"

echo_yellow "Targeting version: $LATEST_PYTHON_VERSION"

# Check if the package exists before trying to install.
if ! apt-cache show "$LATEST_PYTHON_VERSION" > /dev/null 2>&1; then
    echo_red "Error: Package '$LATEST_PYTHON_VERSION' not found in the PPA."
    echo_red "Please check available versions from the deadsnakes PPA."
    exit 1
fi

# Install the full version, including dev headers and venv.
# The 'distutils' package is deprecated and no longer provided for this version.
apt-get install -y "$LATEST_PYTHON_VERSION" \
                   "${LATEST_PYTHON_VERSION}-dev" \
                   "${LATEST_PYTHON_VERSION}-venv"

echo_green "$LATEST_PYTHON_VERSION and associated packages installed successfully."
echo ""


# --- Step 5: Verify Python Installation ---
echo_green "--- Step 5: Verifying the Python installation ---"
INSTALLED_PYTHON_EXECUTABLE=$(command -v "$LATEST_PYTHON_VERSION")
if [ -z "$INSTALLED_PYTHON_EXECUTABLE" ]; then
    echo_red "Installation verification failed. Could not find $LATEST_PYTHON_VERSION in PATH."
    exit 1
fi

"$INSTALLED_PYTHON_EXECUTABLE" --version
echo_green "Python verification successful."
echo ""

# --- Step 6: Upgrade Pip ---
echo_green "--- Step 6: Upgrading pip for $LATEST_PYTHON_VERSION ---"
# Use the specific python version to ensure we're upgrading its pip
"$INSTALLED_PYTHON_EXECUTABLE" -m pip install --upgrade pip
echo_green "Pip has been upgraded to the latest version."
echo ""

# --- Step 7: Clear Caches ---
echo_green "--- Step 7: Cleaning up APT and Pip caches ---"
# Clear pip cache
"$INSTALLED_PYTHON_EXECUTABLE" -m pip cache purge
# Clean up apt cache
apt-get clean
apt-get autoremove -y
echo_green "Caches cleared successfully."
echo ""

# --- Final Message ---
echo_green "--------------------------------------------------"
echo_green " Python installation and setup complete!"
echo_green " You can now use '$LATEST_PYTHON_VERSION' to run the new version."
echo_green "--------------------------------------------------"
